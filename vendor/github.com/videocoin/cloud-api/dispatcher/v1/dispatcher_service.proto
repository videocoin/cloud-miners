syntax = "proto3";

package cloud.api.dispatcher.v1;

import "google/protobuf/empty.proto";
import "google/api/annotations.proto";
import "github.com/gogo/protobuf/gogoproto/gogo.proto";
import "dispatcher/v1/task.proto";
import "github.com/videocoin/cloud-api/validator/v1/validator_service.proto";
import "github.com/videocoin/cloud-api/miners/v1/miner_service.proto";

option go_package = "v1";
option (gogoproto.marshaler_all) = true;
option (gogoproto.unmarshaler_all) = true;
option (gogoproto.sizer_all) = true;
option (gogoproto.goproto_registration) = true;
option (gogoproto.messagename_all) = true;

service DispatcherService {
  rpc GetPendingTask(TaskPendingRequest) returns (cloud.api.dispatcher.v1.Task) {}
  rpc GetTask(TaskRequest) returns (cloud.api.dispatcher.v1.Task) {}
  rpc MarkTaskAsCompleted(TaskRequest) returns (cloud.api.dispatcher.v1.Task) {}
  rpc MarkTaskAsFailed(TaskRequest) returns (cloud.api.dispatcher.v1.Task) {}
  rpc ValidateProof(cloud.api.validator.v1.ValidateProofRequest) returns (google.protobuf.Empty) {}
  rpc Ping(cloud.api.miners.v1.PingRequest) returns (cloud.api.miners.v1.PingResponse) {}
  rpc Register(cloud.api.miners.v1.RegistrationRequest) returns (google.protobuf.Empty) {}
  rpc GetInternalConfig(InternalConfigRequest) returns (InternalConfigResponse) {}
  rpc GetConfig(ConfigRequest) returns (ConfigResponse) {}
  rpc MarkSegmentAsTranscoded(TaskSegmentRequest) returns (google.protobuf.Empty) {}
}

message TaskPendingRequest {
  string client_id = 1 [(gogoproto.customname) = "ClientID"];
}

message TaskRequest {
  string client_id = 1 [(gogoproto.customname) = "ClientID"];
  string id = 2 [(gogoproto.customname) = "ID"];
}

message InternalConfigRequest {}

message InternalConfigResponse {
  string key = 1;
  string secret = 2;
  string client_id = 3;
}

message ConfigRequest {}

message ConfigResponse {
    string rpc_node_url = 1 [(gogoproto.customname) = "RPCNodeURL"];
    string syncer_url = 2 [(gogoproto.customname) = "SyncerURL"];
}

message TaskSegmentRequest {
  string client_id = 1 [(gogoproto.customname) = "ClientID"];
  string id = 2 [(gogoproto.customname) = "ID"];
  uint64 num = 3;
  double duration = 4;
}

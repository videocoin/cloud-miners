syntax = "proto3";

package cloud.api.dispatcher.v1;

import "google/api/annotations.proto";
import "github.com/gogo/protobuf/gogoproto/gogo.proto";
import "dispatcher/v1/task.proto";

option go_package = "v1";
option (gogoproto.marshaler_all) = true;
option (gogoproto.unmarshaler_all) = true;
option (gogoproto.sizer_all) = true;
option (gogoproto.goproto_registration) = true;
option (gogoproto.messagename_all) = true;

enum EventType {
    option (gogoproto.goproto_enum_prefix) = false;
    option (gogoproto.enum_customname) = "EventType";

    EVENT_TYPE_UNKNOWN = 0 [(gogoproto.enumvalue_customname) = "EventTypeUnknown"];
    EVENT_TYPE_CREATE = 1 [(gogoproto.enumvalue_customname) = "EventTypeCreate"];
    EVENT_TYPE_UPDATE = 2 [(gogoproto.enumvalue_customname) = "EventTypeUpdate"];
    EVENT_TYPE_DELETE = 3 [(gogoproto.enumvalue_customname) = "EventTypeDelete"];
    EVENT_TYPE_UPDATE_STATUS = 4 [(gogoproto.enumvalue_customname) = "EventTypeUpdateStatus"];
    EVENT_TYPE_SEGMENT_TRANSCODED = 5 [(gogoproto.enumvalue_customname) = "EventTypeSegmentTranscoded"];
}

message Event {
    EventType type = 1;
    string task_id = 2 [(gogoproto.customname) = "TaskID"];
    cloud.api.dispatcher.v1.TaskStatus status = 3;
    string stream_id = 4 [(gogoproto.customname) = "StreamID"];
    string profile_id = 5 [(gogoproto.customname) = "ProfileID"];
    string client_id = 6 [(gogoproto.customname) = "ClientID"];
    string client_user_id = 7 [(gogoproto.customname) = "ClientUserID"];
    int32 user_id = 8 [(gogoproto.customname) = "UserID"];
    uint64 num = 9;
    double duration = 10;
}

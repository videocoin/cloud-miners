// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: miners/v1/miner_service.proto

package v1

import (
	context "context"
	fmt "fmt"
	_ "github.com/gogo/googleapis/google/api"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	types "github.com/gogo/protobuf/types"
	golang_proto "github.com/golang/protobuf/proto"
	rpc "github.com/videocoin/cloud-api/rpc"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = golang_proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type MinerRequest struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MinerRequest) Reset()         { *m = MinerRequest{} }
func (m *MinerRequest) String() string { return proto.CompactTextString(m) }
func (*MinerRequest) ProtoMessage()    {}
func (*MinerRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_1a3d7c5a419ed72c, []int{0}
}
func (m *MinerRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MinerRequest.Unmarshal(m, b)
}
func (m *MinerRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MinerRequest.Marshal(b, m, deterministic)
}
func (m *MinerRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MinerRequest.Merge(m, src)
}
func (m *MinerRequest) XXX_Size() int {
	return xxx_messageInfo_MinerRequest.Size(m)
}
func (m *MinerRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MinerRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MinerRequest proto.InternalMessageInfo

func (m *MinerRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (*MinerRequest) XXX_MessageName() string {
	return "cloud.api.miners.v1.MinerRequest"
}

type MinerResponse struct {
	Id                   string      `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Status               MinerStatus `protobuf:"varint,2,opt,name=status,proto3,enum=cloud.api.miners.v1.MinerStatus" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *MinerResponse) Reset()         { *m = MinerResponse{} }
func (m *MinerResponse) String() string { return proto.CompactTextString(m) }
func (*MinerResponse) ProtoMessage()    {}
func (*MinerResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_1a3d7c5a419ed72c, []int{1}
}
func (m *MinerResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MinerResponse.Unmarshal(m, b)
}
func (m *MinerResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MinerResponse.Marshal(b, m, deterministic)
}
func (m *MinerResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MinerResponse.Merge(m, src)
}
func (m *MinerResponse) XXX_Size() int {
	return xxx_messageInfo_MinerResponse.Size(m)
}
func (m *MinerResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MinerResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MinerResponse proto.InternalMessageInfo

func (m *MinerResponse) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *MinerResponse) GetStatus() MinerStatus {
	if m != nil {
		return m.Status
	}
	return MinerStatusOffline
}

func (*MinerResponse) XXX_MessageName() string {
	return "cloud.api.miners.v1.MinerResponse"
}

type MinerListResponse struct {
	Items                []*MinerResponse `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *MinerListResponse) Reset()         { *m = MinerListResponse{} }
func (m *MinerListResponse) String() string { return proto.CompactTextString(m) }
func (*MinerListResponse) ProtoMessage()    {}
func (*MinerListResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_1a3d7c5a419ed72c, []int{2}
}
func (m *MinerListResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MinerListResponse.Unmarshal(m, b)
}
func (m *MinerListResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MinerListResponse.Marshal(b, m, deterministic)
}
func (m *MinerListResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MinerListResponse.Merge(m, src)
}
func (m *MinerListResponse) XXX_Size() int {
	return xxx_messageInfo_MinerListResponse.Size(m)
}
func (m *MinerListResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MinerListResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MinerListResponse proto.InternalMessageInfo

func (m *MinerListResponse) GetItems() []*MinerResponse {
	if m != nil {
		return m.Items
	}
	return nil
}

func (*MinerListResponse) XXX_MessageName() string {
	return "cloud.api.miners.v1.MinerListResponse"
}
func init() {
	proto.RegisterType((*MinerRequest)(nil), "cloud.api.miners.v1.MinerRequest")
	golang_proto.RegisterType((*MinerRequest)(nil), "cloud.api.miners.v1.MinerRequest")
	proto.RegisterType((*MinerResponse)(nil), "cloud.api.miners.v1.MinerResponse")
	golang_proto.RegisterType((*MinerResponse)(nil), "cloud.api.miners.v1.MinerResponse")
	proto.RegisterType((*MinerListResponse)(nil), "cloud.api.miners.v1.MinerListResponse")
	golang_proto.RegisterType((*MinerListResponse)(nil), "cloud.api.miners.v1.MinerListResponse")
}

func init() { proto.RegisterFile("miners/v1/miner_service.proto", fileDescriptor_1a3d7c5a419ed72c) }
func init() {
	golang_proto.RegisterFile("miners/v1/miner_service.proto", fileDescriptor_1a3d7c5a419ed72c)
}

var fileDescriptor_1a3d7c5a419ed72c = []byte{
	// 439 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x52, 0x41, 0xcf, 0xd2, 0x30,
	0x18, 0x66, 0x43, 0x17, 0xad, 0x4a, 0xb0, 0x04, 0x32, 0x41, 0x97, 0xd9, 0x83, 0x21, 0x26, 0xb4,
	0x01, 0x2f, 0xc4, 0xa3, 0xc6, 0xe8, 0x41, 0x62, 0x32, 0x4e, 0x7a, 0x21, 0x63, 0xab, 0xa3, 0x09,
	0x5b, 0xe7, 0xda, 0x2d, 0x51, 0xe3, 0xc5, 0xbf, 0xe0, 0xc1, 0xbf, 0xe3, 0x91, 0xa3, 0x89, 0x7f,
	0xc0, 0x80, 0x3f, 0xc4, 0xac, 0x2d, 0xca, 0x47, 0x3e, 0xbe, 0x70, 0xeb, 0xdb, 0xf7, 0x79, 0x9f,
	0xe7, 0xed, 0xf3, 0x14, 0x3c, 0x48, 0x59, 0x46, 0x0b, 0x41, 0xaa, 0x31, 0x51, 0xa7, 0x85, 0xa0,
	0x45, 0xc5, 0x22, 0x8a, 0xf3, 0x82, 0x4b, 0x0e, 0x3b, 0xd1, 0x9a, 0x97, 0x31, 0x0e, 0x73, 0x86,
	0x35, 0x10, 0x57, 0xe3, 0xfe, 0x20, 0xe1, 0x3c, 0x59, 0x53, 0xa2, 0x20, 0xcb, 0xf2, 0x3d, 0xa1,
	0x69, 0x2e, 0x3f, 0xea, 0x89, 0xfe, 0x7d, 0xd3, 0x0c, 0x73, 0x46, 0xc2, 0x2c, 0xe3, 0x32, 0x94,
	0x8c, 0x67, 0xc2, 0x74, 0x47, 0x09, 0x93, 0xab, 0x72, 0x89, 0x23, 0x9e, 0x92, 0x84, 0x27, 0xfc,
	0x3f, 0x47, 0x5d, 0xa9, 0x42, 0x9d, 0x0c, 0x9c, 0x1c, 0xc0, 0x2b, 0x16, 0x53, 0x1e, 0x71, 0x96,
	0x11, 0xb5, 0xd3, 0xa8, 0x16, 0x28, 0xf2, 0x88, 0xac, 0x68, 0xb8, 0x96, 0x2b, 0x33, 0xd0, 0x3d,
	0x7a, 0x8e, 0xbe, 0x46, 0x1e, 0xb8, 0x3d, 0xab, 0xcb, 0x80, 0x7e, 0x28, 0xa9, 0x90, 0xb0, 0x05,
	0x6c, 0x16, 0xbb, 0x96, 0x6f, 0x0d, 0x6f, 0x06, 0x36, 0x8b, 0xd1, 0x5b, 0x70, 0xc7, 0xf4, 0x45,
	0xce, 0x33, 0x41, 0x8f, 0x01, 0x70, 0x0a, 0x1c, 0x21, 0x43, 0x59, 0x0a, 0xd7, 0xf6, 0xad, 0x61,
	0x6b, 0xe2, 0xe3, 0x4b, 0x8c, 0xc1, 0x8a, 0x63, 0xae, 0x70, 0x81, 0xc1, 0xa3, 0x19, 0xb8, 0xab,
	0xae, 0x5f, 0x33, 0x21, 0xff, 0xd1, 0x4f, 0xc1, 0x75, 0x26, 0x69, 0x2a, 0x5c, 0xcb, 0x6f, 0x0e,
	0x6f, 0x4d, 0xd0, 0x69, 0xb6, 0xfd, 0x48, 0xa0, 0x07, 0x26, 0xdf, 0x9b, 0x66, 0x55, 0x31, 0xd7,
	0x41, 0xc1, 0x37, 0xc0, 0x79, 0xa5, 0x2c, 0x80, 0x3d, 0xac, 0xbd, 0xc7, 0x7b, 0x53, 0xf1, 0x8b,
	0x3a, 0x98, 0xfe, 0xe0, 0x80, 0xbe, 0xc8, 0x23, 0xac, 0xe1, 0x7a, 0x4f, 0xd4, 0xfe, 0xfa, 0xeb,
	0xcf, 0x37, 0x1b, 0xc0, 0x1b, 0xc6, 0xc8, 0x4f, 0x70, 0x01, 0x9c, 0xe7, 0x05, 0x0d, 0x25, 0x3d,
	0x49, 0x78, 0xc6, 0xbe, 0xe8, 0x9e, 0xe2, 0xed, 0xa0, 0x96, 0xfa, 0x09, 0xfb, 0x3c, 0xc4, 0x53,
	0xeb, 0x31, 0x64, 0xa0, 0xf9, 0x92, 0x4a, 0xf8, 0xf0, 0x2a, 0x16, 0x95, 0xd3, 0x59, 0x42, 0x03,
	0x25, 0xd4, 0x85, 0x9d, 0x8b, 0x42, 0xe4, 0x33, 0x8b, 0xbf, 0x40, 0x06, 0xae, 0xd5, 0xc6, 0x9f,
	0xa3, 0xf5, 0xe8, 0x34, 0xe4, 0x30, 0x3b, 0xd4, 0x53, 0x7a, 0x6d, 0x78, 0xf4, 0xb0, 0x67, 0xee,
	0x66, 0xeb, 0x35, 0x7e, 0x6e, 0xbd, 0xc6, 0xef, 0xad, 0xd7, 0xf8, 0xb1, 0xf3, 0xac, 0xcd, 0xce,
	0xb3, 0xde, 0xd9, 0xd5, 0x78, 0xe9, 0x28, 0xfb, 0x9e, 0xfc, 0x0d, 0x00, 0x00, 0xff, 0xff, 0x68,
	0xf9, 0x15, 0x84, 0x6c, 0x03, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MinersServiceClient is the client API for MinersService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MinersServiceClient interface {
	Health(ctx context.Context, in *types.Empty, opts ...grpc.CallOption) (*rpc.HealthStatus, error)
	Create(ctx context.Context, in *types.Empty, opts ...grpc.CallOption) (*MinerResponse, error)
	Get(ctx context.Context, in *MinerRequest, opts ...grpc.CallOption) (*MinerResponse, error)
	List(ctx context.Context, in *MinerRequest, opts ...grpc.CallOption) (*MinerListResponse, error)
}

type minersServiceClient struct {
	cc *grpc.ClientConn
}

func NewMinersServiceClient(cc *grpc.ClientConn) MinersServiceClient {
	return &minersServiceClient{cc}
}

func (c *minersServiceClient) Health(ctx context.Context, in *types.Empty, opts ...grpc.CallOption) (*rpc.HealthStatus, error) {
	out := new(rpc.HealthStatus)
	err := c.cc.Invoke(ctx, "/cloud.api.miners.v1.MinersService/Health", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *minersServiceClient) Create(ctx context.Context, in *types.Empty, opts ...grpc.CallOption) (*MinerResponse, error) {
	out := new(MinerResponse)
	err := c.cc.Invoke(ctx, "/cloud.api.miners.v1.MinersService/Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *minersServiceClient) Get(ctx context.Context, in *MinerRequest, opts ...grpc.CallOption) (*MinerResponse, error) {
	out := new(MinerResponse)
	err := c.cc.Invoke(ctx, "/cloud.api.miners.v1.MinersService/Get", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *minersServiceClient) List(ctx context.Context, in *MinerRequest, opts ...grpc.CallOption) (*MinerListResponse, error) {
	out := new(MinerListResponse)
	err := c.cc.Invoke(ctx, "/cloud.api.miners.v1.MinersService/List", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MinersServiceServer is the server API for MinersService service.
type MinersServiceServer interface {
	Health(context.Context, *types.Empty) (*rpc.HealthStatus, error)
	Create(context.Context, *types.Empty) (*MinerResponse, error)
	Get(context.Context, *MinerRequest) (*MinerResponse, error)
	List(context.Context, *MinerRequest) (*MinerListResponse, error)
}

// UnimplementedMinersServiceServer can be embedded to have forward compatible implementations.
type UnimplementedMinersServiceServer struct {
}

func (*UnimplementedMinersServiceServer) Health(ctx context.Context, req *types.Empty) (*rpc.HealthStatus, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Health not implemented")
}
func (*UnimplementedMinersServiceServer) Create(ctx context.Context, req *types.Empty) (*MinerResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Create not implemented")
}
func (*UnimplementedMinersServiceServer) Get(ctx context.Context, req *MinerRequest) (*MinerResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Get not implemented")
}
func (*UnimplementedMinersServiceServer) List(ctx context.Context, req *MinerRequest) (*MinerListResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method List not implemented")
}

func RegisterMinersServiceServer(s *grpc.Server, srv MinersServiceServer) {
	s.RegisterService(&_MinersService_serviceDesc, srv)
}

func _MinersService_Health_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(types.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MinersServiceServer).Health(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cloud.api.miners.v1.MinersService/Health",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MinersServiceServer).Health(ctx, req.(*types.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _MinersService_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(types.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MinersServiceServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cloud.api.miners.v1.MinersService/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MinersServiceServer).Create(ctx, req.(*types.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _MinersService_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MinerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MinersServiceServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cloud.api.miners.v1.MinersService/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MinersServiceServer).Get(ctx, req.(*MinerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MinersService_List_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MinerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MinersServiceServer).List(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cloud.api.miners.v1.MinersService/List",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MinersServiceServer).List(ctx, req.(*MinerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _MinersService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "cloud.api.miners.v1.MinersService",
	HandlerType: (*MinersServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Health",
			Handler:    _MinersService_Health_Handler,
		},
		{
			MethodName: "Create",
			Handler:    _MinersService_Create_Handler,
		},
		{
			MethodName: "Get",
			Handler:    _MinersService_Get_Handler,
		},
		{
			MethodName: "List",
			Handler:    _MinersService_List_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "miners/v1/miner_service.proto",
}

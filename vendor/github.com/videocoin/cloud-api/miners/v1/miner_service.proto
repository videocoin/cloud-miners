syntax = "proto3";

package cloud.api.miners.v1;

import "google/protobuf/empty.proto";
import "google/api/annotations.proto";
import "github.com/gogo/protobuf/gogoproto/gogo.proto";

import "github.com/videocoin/cloud-api/rpc/health.proto";
import "miners/v1/miner.proto";

option go_package = "v1";
option (gogoproto.marshaler_all) = false;
option (gogoproto.unmarshaler_all) = false;
option (gogoproto.sizer_all) = false;
option (gogoproto.goproto_registration) = true;
option (gogoproto.messagename_all) = true;

service MinersService {
    rpc Health(google.protobuf.Empty) returns (cloud.api.rpc.HealthStatus) {
        option (google.api.http) = {
            get: "/healthz"
        };
    }

    rpc Create(google.protobuf.Empty) returns (MinerResponse) {
        option (google.api.http) = {
            post: "/api/v1/miners",
            body: "*"
        };
    }

    rpc Get(MinerRequest) returns (MinerResponse) {
        option (google.api.http) = {
            get: "/api/v1/miners/{id}"
        };
    }

    rpc List(MinerRequest) returns (MinerListResponse) {
        option (google.api.http) = {
            get: "/api/v1/miners"
        };
    }

    rpc Ping(PingRequest) returns (PingResponse) {}

    rpc AssignTask(AssignTaskRequest) returns (google.protobuf.Empty) {}

    rpc UnassignTask(AssignTaskRequest) returns (google.protobuf.Empty) {}
}

message MinerRequest {
    string id = 1;
}

message MinerResponse {
    string id = 1;
    MinerStatus status = 2;
}

message MinerListResponse {
    repeated MinerResponse items = 1;
}

message PingRequest {
    string client_id = 1 [(gogoproto.customname) = "ClientID"];
}
  
message PingResponse {}

message AssignTaskRequest {
    string client_id = 1 [(gogoproto.customname) = "ClientID"];
    string task_id = 2 [(gogoproto.customname) = "TaskID"];
}